[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "workflow-engine"
version = "0.1.0"
description = "Workflow execution engine with node-based execution system"
authors = [
    {name = "Agent Team", email = "team@example.com"}
]
dependencies = [
    # Core FastAPI & Server
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.0.0",
    "python-multipart>=0.0.6",
    # Database & Storage
    "psycopg2-binary>=2.9.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "supabase>=2.17.0",
    "pgvector",
    # Environment & Config
    "python-dotenv>=1.0.0",
    "structlog>=23.2.0",
    # HTTP Clients
    "requests>=2.31.0",
    "httpx>=0.25.0",
    "urllib3>=2.0.0",
    # AI & ML Stack
    "google-generativeai>=0.8.0",
    "langchain>=0.1.0",
    "langgraph>=0.0.20",
    "openai>=1.3.0",
    "anthropic>=0.7.0",
    # Scientific Computing & Utils
    "numpy>=1.24.0",
    "networkx>=3.0.0",
    "tiktoken",
    "croniter>=2.0.0",
    "cryptography",
    # Task Processing & Cache
    "celery>=5.3.0",
    "redis>=5.0.0",
    "flower",
    # Authentication
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "pyjwt>=2.10.1",
    # gRPC & Protocol Buffers
    "grpcio>=1.68.0",
    "grpcio-tools>=1.68.0",
    "protobuf>=4.21.0,<6.0.0",
    # Monitoring & Observability
    "prometheus-client",
    "psutil",
    "sentry-sdk",
    "opentelemetry-api",
    "opentelemetry-sdk",
    "opentelemetry-instrumentation-fastapi",
    "opentelemetry-instrumentation-celery",
    "opentelemetry-instrumentation-sqlalchemy",
    "opentelemetry-exporter-otlp",
    "opentelemetry-instrumentation-requests",
    "opentelemetry-instrumentation-psycopg2",
    "opentelemetry-instrumentation-redis",
    "opentelemetry-instrumentation-langchain",
    "opentelemetry-instrumentation-boto3sqs",
    "opentelemetry-instrumentation-botocore",
    "opentelemetry-exporter-prometheus",
    # Python utilities
    "nest-asyncio",
    "pytest>=8.4.1",
]

[tool.hatch.build.targets.wheel]
packages = ["workflow_engine"]

[tool.hatch.build.targets.wheel.sources]
"." = "workflow_engine"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",  # For testing FastAPI endpoints
]

[tool.black]
line-length = 100
target-version = ['py311']

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Set to false for gradual typing adoption

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
]
markers = [
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "slow: marks tests as slow running",
]
