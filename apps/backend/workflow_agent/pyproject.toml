[project]
name = "workflow-agent"
version = "1.0.0"
description = "LangGraph-based Workflow Agent for AI-powered workflow generation"
authors = [
    {name = "Workflow Agent Team", email = "team@example.com"}
]
# readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"

dependencies = [
    "langgraph>=0.2.0",
    "langchain>=0.3.0",
    "langchain-openai>=0.2.0",
    "langchain-anthropic>=0.2.0",
    "langchain-core>=0.3.0,<1.0.0",
    # gRPC 依赖已移除，使用 FastAPI + Pydantic
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.26.0",
    "pydantic[email]>=2.7.4",
    "pydantic-settings==2.1.0",
    "python-dotenv==1.0.0",
    "structlog>=23.2.0",
    "redis==5.0.1",
    "psycopg2-binary>=2.9.10",
    "sqlalchemy==2.0.23",
    "alembic==1.13.1",
    "jinja2>=3.1.0",
    "supabase>=2.0.0",
    # OpenTelemetry dependencies
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-instrumentation-fastapi>=0.42b0",
    "opentelemetry-instrumentation-requests>=0.42b0",
    "opentelemetry-instrumentation-httpx>=0.42b0",
    "opentelemetry-instrumentation-psycopg2>=0.42b0",
    "opentelemetry-exporter-otlp>=1.21.0",
    "opentelemetry-exporter-prometheus>=1.11.0,<1.12.0",
]

[project.optional-dependencies]
dev = [
    # gRPC 开发依赖已移除
    "langgraph-cli>=0.1.0",
    "httpx>=0.24.0",  # 用于测试 FastAPI 客户端
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = [
    "workflow_agent"
]

[tool.hatch.build.targets.wheel.sources]
"." = "workflow_agent"

# Tool configurations inherited from workspace root
# Service-specific pytest configuration
[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]

[tool.uv.sources]
workflow-agent = { workspace = true }

[dependency-groups]
dev = [
    "langgraph-api",
    "langgraph-cli[inmem]>=0.3.4",
    "workflow-agent",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
]
