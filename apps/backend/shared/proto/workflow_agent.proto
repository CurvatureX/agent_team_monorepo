syntax = "proto3";

package workflow_agent;

// 唯一的核心接口 - 处理所有6阶段的对话流程和workflow生成
service WorkflowAgent {
  rpc ProcessConversation(ConversationRequest) returns (stream ConversationResponse);
}

// 对话请求
message ConversationRequest {
  string session_id = 1;
  string user_id = 2;
  string access_token = 3;
  string user_message = 4;
  WorkflowContext workflow_context = 5;   // edit/copy时需要
}

// 对话响应流
message ConversationResponse {
  string session_id = 1;
  ResponseType response_type = 2;
  oneof response {
    string message = 3;
    string workflow = 4; // workflow json string
    ErrorContent error = 5;
  }
  bool is_final = 11;
}


enum ResponseType {
  RESPONSE_TYPE_UNKNOWN = 0;
  RESPONSE_TYPE_MESSAGE = 1;
  RESPONSE_TYPE_WORKFLOW = 2;
  RESPONSE_TYPE_ERROR = 3;
}


// 工作流上下文
message WorkflowContext {
  string origin = 1;          // create, edit, copy
  string source_workflow_id = 2;
}

message ErrorContent {
  string error_code = 1;
  string message = 2;
  string details = 3;
  bool is_recoverable = 4;
}
