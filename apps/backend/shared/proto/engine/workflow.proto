syntax = "proto3";

package workflow_engine;

option go_package = "github.com/agent-team/workflow_engine/proto";

// ============================================================================
// 工作流核心模块 (Workflow Core Module)
// ============================================================================

// 工作流定义
message Workflow {
  string id = 1;
  string name = 2;
  string description = 3;
  bool active = 4;
  repeated Node nodes = 5;
  ConnectionsMap connections = 6;
  WorkflowSettings settings = 7;
  map<string, string> static_data = 8;
  map<string, string> pin_data = 9;
  int64 created_at = 10;
  int64 updated_at = 11;
  string version = 12;
  repeated string tags = 13;
}

// 工作流设置
message WorkflowSettings {
  string timezone = 1;
  bool save_execution_progress = 2;
  bool save_manual_executions = 3;
  int32 timeout = 4;
  ErrorPolicy error_policy = 5;
  CallerPolicy caller_policy = 6;
}

// 错误处理策略
enum ErrorPolicy {
  STOP_WORKFLOW = 0;
  CONTINUE_REGULAR_OUTPUT = 1;
  CONTINUE_ERROR_OUTPUT = 2;
}

// 调用者策略
enum CallerPolicy {
  WORKFLOW_MAIN = 0;
  WORKFLOW_SUB = 1;
}

// ============================================================================
// 节点模块 (Node Module)
// ============================================================================

// 节点类型枚举 - 8大核心节点类型
enum NodeType {
  TRIGGER_NODE = 0;           // 触发器节点
  AI_AGENT_NODE = 1;          // AI代理节点
  EXTERNAL_ACTION_NODE = 2;   // 外部动作节点
  ACTION_NODE = 3;            // 动作节点
  FLOW_NODE = 4;              // 流程控制节点
  HUMAN_IN_THE_LOOP_NODE = 5; // 人机交互节点
  TOOL_NODE = 6;              // 工具节点
  MEMORY_NODE = 7;            // 记忆节点
}

// 节点子类型枚举
enum NodeSubtype {
  // 触发器子类型
  TRIGGER_CHAT = 0;
  TRIGGER_WEBHOOK = 1;
  TRIGGER_CRON = 2;
  TRIGGER_MANUAL = 3;
  TRIGGER_EMAIL = 4;
  TRIGGER_FORM = 5;
  TRIGGER_CALENDAR = 6;

  // AI Agent子类型
  AI_ROUTER_AGENT = 10;
  AI_TASK_ANALYZER = 11;
  AI_DATA_INTEGRATOR = 12;
  AI_REPORT_GENERATOR = 13;
  AI_REMINDER_DECISION = 14;
  AI_WEEKLY_REPORT = 15;

  // 外部动作子类型
  EXTERNAL_GITHUB = 20;
  EXTERNAL_GOOGLE_CALENDAR = 21;
  EXTERNAL_TRELLO = 22;
  EXTERNAL_EMAIL = 23;
  EXTERNAL_SLACK = 24;
  EXTERNAL_API_CALL = 25;
  EXTERNAL_WEBHOOK = 26;
  EXTERNAL_NOTIFICATION = 27;

  // 动作子类型
  ACTION_RUN_CODE = 30;
  ACTION_SEND_HTTP_REQUEST = 31;
  ACTION_PARSE_IMAGE = 32;
  ACTION_WEB_SEARCH = 33;
  ACTION_DATABASE_OPERATION = 34;
  ACTION_FILE_OPERATION = 35;
  ACTION_DATA_TRANSFORMATION = 36;

  // 流程控制子类型
  FLOW_IF = 40;
  FLOW_FILTER = 41;
  FLOW_LOOP = 42;
  FLOW_MERGE = 43;
  FLOW_SWITCH = 44;
  FLOW_WAIT = 45;

  // 人机交互子类型
  HUMAN_GMAIL = 50;
  HUMAN_SLACK = 51;
  HUMAN_DISCORD = 52;
  HUMAN_TELEGRAM = 53;
  HUMAN_APP = 54;

  // 工具子类型
  TOOL_GOOGLE_CALENDAR_MCP = 60;
  TOOL_NOTION_MCP = 61;
  TOOL_CALENDAR = 62;
  TOOL_EMAIL = 63;
  TOOL_HTTP = 64;
  TOOL_CODE_EXECUTION = 65;

  // 记忆子类型
  MEMORY_SIMPLE = 70;
  MEMORY_BUFFER = 71;
  MEMORY_KNOWLEDGE = 72;
  MEMORY_VECTOR_STORE = 73;
  MEMORY_DOCUMENT = 74;
  MEMORY_EMBEDDING = 75;
}

// 节点定义
message Node {
  string id = 1;
  string name = 2;
  NodeType type = 3;
  NodeSubtype subtype = 4;
  int32 type_version = 5;
  Position position = 6;
  bool disabled = 7;
  map<string, string> parameters = 8;
  map<string, string> credentials = 9;
  ErrorHandling on_error = 10;
  RetryPolicy retry_policy = 11;
  map<string, string> notes = 12;
  repeated string webhooks = 13;
}

// 节点位置
message Position {
  float x = 1;
  float y = 2;
}

// 错误处理方式
enum ErrorHandling {
  STOP_WORKFLOW_ON_ERROR = 0;
  CONTINUE_REGULAR_OUTPUT_ON_ERROR = 1;
  CONTINUE_ERROR_OUTPUT_ON_ERROR = 2;
}

// 重试策略
message RetryPolicy {
  int32 max_tries = 1;
  int32 wait_between_tries = 2;
}

// ============================================================================
// 连接系统模块 (Connection System Module)
// ============================================================================

// 连接映射 (nodeName -> connectionType -> connections)
message ConnectionsMap {
  map<string, NodeConnections> connections = 1;
}

// 节点连接定义
message NodeConnections {
  map<string, ConnectionArray> connection_types = 1;
}

// 连接数组
message ConnectionArray {
  repeated Connection connections = 1;
}

// 单个连接定义
message Connection {
  string node = 1;              // 目标节点名
  ConnectionType type = 2;      // 连接类型
  int32 index = 3;             // 端口索引
}

// 连接类型枚举
enum ConnectionType {
  MAIN = 0;
  AI_AGENT = 1;
  AI_CHAIN = 2;
  AI_DOCUMENT = 3;
  AI_EMBEDDING = 4;
  AI_LANGUAGE_MODEL = 5;
  AI_MEMORY = 6;
  AI_OUTPUT_PARSER = 7;
  AI_RETRIEVER = 8;
  AI_RERANKER = 9;
  AI_TEXT_SPLITTER = 10;
  AI_TOOL = 11;
  AI_VECTOR_STORE = 12;
} 