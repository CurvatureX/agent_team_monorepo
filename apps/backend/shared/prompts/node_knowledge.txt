Node Type Glossary (aligned with node_specs)

There are 8 node types (no “_NODE” suffix): TRIGGER, AI_AGENT, EXTERNAL_ACTION, ACTION, FLOW, HUMAN_IN_THE_LOOP, TOOL, MEMORY.

General field conventions
- Use fields: id, type, subtype, name, description, position, configurations, input_params, output_params, input_ports, output_ports.
- Use configurations for static config (not “parameters”).
- Node names should not contain spaces; use underscores or dashes.
- The legacy `parameters` field is DEPRECATED; do not generate it. Place AI agent prompts in `configurations.system_prompt`.

Attached Nodes (AI_AGENT only)
- attached_nodes is an array that belongs ONLY to AI_AGENT nodes.
- It lists the IDs of TOOL (MCP tools) and MEMORY nodes that the AI agent uses internally.
- TOOL and MEMORY nodes must NOT appear in workflow connections; they have no ports and are executed within the AI agent context.
- When counting required connections, EXCLUDE TOOL and MEMORY nodes.
- Example:
  - AI_AGENT.assistant_ai.attached_nodes = ["conversation_memory", "notion_mcp_tool"]
  - connections: TRIGGER → AI_AGENT → EXTERNAL_ACTION (no edges to TOOL/MEMORY)

TRIGGER
Description: Initiate a workflow based on events or schedule.
Common subtypes (see shared/node_specs/TRIGGER): MANUAL, WEBHOOK, CRON, GITHUB, SLACK, EMAIL.

AI_AGENT
Description: Provider-based AI agent where functionality is defined by system prompts; can attach TOOL and MEMORY via attached_nodes.
Common subtypes (shared/node_specs/AI_AGENT): OPENAI_CHATGPT, ANTHROPIC_CLAUDE, GOOGLE_GEMINI.
Field guidance:
- Required: configurations.model (pick from MCP options)
- Recommended: configurations.system_prompt; optionally max_tokens, temperature, response_format
- Do NOT add a deprecated `parameters` field; keep configuration minimal and relevant.

EXTERNAL_ACTION
Description: Interact with external systems via provider-specific integrations.
Common subtypes (shared/node_specs/EXTERNAL_ACTION): SLACK, GITHUB, NOTION, GOOGLE_CALENDAR, FIRECRAWL, DISCORD_ACTION, TELEGRAM_ACTION.

ACTION
Description: Self-contained processing within the workflow.
Common subtypes (shared/node_specs/ACTION): HTTP_REQUEST, DATA_TRANSFORMATION.

FLOW
Description: Control flow of execution.
Common subtypes (shared/node_specs/FLOW): IF, FILTER, SORT, LOOP, MERGE, WAIT, DELAY.

HUMAN_IN_THE_LOOP
Description: Pause and wait for human response/approval; includes integrated messaging/analysis.
Common subtypes (shared/node_specs/HUMAN_IN_THE_LOOP): SLACK_INTERACTION, GMAIL_INTERACTION, OUTLOOK_INTERACTION, DISCORD_INTERACTION, TELEGRAM_INTERACTION, MANUAL_REVIEW.

TOOL
Description: MCP tool surface; ATTACHED to an AI_AGENT via attached_nodes (no ports).
Common subtypes (shared/node_specs/TOOL): NOTION_MCP_TOOL, GOOGLE_CALENDAR_MCP_TOOL, SLACK_MCP_TOOL, FIRECRAWL_MCP_TOOL, DISCORD_MCP_TOOL.
Runtime schema: input_params { tool_name: string (required), function_args: object, context: object, call_id: string }; output_params { result: object, success: boolean, error_message: string, execution_time: number, cached: boolean, plus tool-specific fields }.

MEMORY
Description: Memory providers for AI agent context and persistence; ATTACHED to AI_AGENT via attached_nodes (no ports).
Common subtypes (shared/node_specs/MEMORY): CONVERSATION_BUFFER, KEY_VALUE_STORE, VECTOR_DATABASE.

Connections and Data Flow
- Connections link executable nodes only (e.g., TRIGGER → AI_AGENT → EXTERNAL_ACTION).
- Do NOT connect TOOL/MEMORY nodes; attach them to AI_AGENT.attached_nodes instead.

Compliance
- Parameter types and schemas follow MCP specifications exposed by node_specs; ensure configurations and params match the defined types.
